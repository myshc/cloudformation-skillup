AWSTemplateFormatVersion: 2010-09-09
Description: VPC stack (2 public subnets, 2 private subnets)


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General configuration 
        Parameters:
          - Environment
          - VPCCidr

      - Label:
          default: Public subnet 01
        Parameters:
          - PublicSubnet01Cidr
          - PublicSubnet01AZ

      - Label:
          default: Public subnet 02
        Parameters:
          - PublicSubnet02Cidr
          - PublicSubnet02AZ

      - Label:
          default: Private subnet 01
        Parameters:
          - PrivateSubnet01Cidr
          - PrivateSubnet01AZ

      - Label:
          default: Private subnet 02
        Parameters:
          - PrivateSubnet02Cidr
          - PrivateSubnet02AZ

Parameters:
  Environment:
    Description: |
      Choose the environment.
      Default is Dev.
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - QA 
      - Prod

  VPCCidr:
    Description: |
      Enter VPC CIDR block.
      Default is 192.168.88.0/26
    Type: String
    Default: 192.168.88.0/26

  PublicSubnet01Cidr:
    Description: |
      Enter public subnet 01 CIDR block.
      Default is 192.168.88.0/28
    Type: String
    Default: 192.168.88.0/28 

  PublicSubnet01AZ:
    Type: AWS::EC2::AvailabilityZone::Name

  PublicSubnet02Cidr:
    Description: |
      Enter public subnet 02 CIDR block.
      Default is 192.168.88.16/28
    Type: String
    Default: 192.168.88.16/28 

  PublicSubnet02AZ:
    Type: AWS::EC2::AvailabilityZone::Name

  PrivateSubnet01Cidr:
    Description: |
      Enter private DB subnet CIDR block.
      Default is 192.168.88.32/28
    Type: String
    Default: 192.168.88.32/28 

  PrivateSubnet01AZ:
    Type: AWS::EC2::AvailabilityZone::Name

  PrivateSubnet02Cidr:
    Description: |
      Enter private DB subnet CIDR block.
      Default is 192.168.88.48/28
    Type: String
    Default: 192.168.88.48/28 

  PrivateSubnet02AZ:
    Type: AWS::EC2::AvailabilityZone::Name


Resources:
  VPC:
    Type: AWS::EC2::VPC   
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: !Sub ${Environment}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-IG

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref VPC 
      InternetGatewayId: !Ref InternetGateway 

  ####################### public subnets #######################

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PublicSubnet01AZ
      CidrBlock: !Ref PublicSubnet01Cidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PublicSubnet01

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PublicSubnet02AZ
      CidrBlock: !Ref PublicSubnet02Cidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PublicSubnet02

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
      - Key: Name
        Value: !Sub ${Environment}-RouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
    DependsOn:
      - VPCGatewayAttachment

  PublicSubnetRouteTableAssociation01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnetRouteTableAssociation02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet02

  ####################### private subnets #######################

  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PrivateSubnet01AZ
      CidrBlock: !Ref PrivateSubnet01Cidr
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PrivateSubnet01

  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PrivateSubnet02AZ
      CidrBlock: !Ref PrivateSubnet02Cidr
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PrivateSubnet02


Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}::VpcId

  VpcCidr:
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub ${AWS::StackName}::VpcCidr

  PublicSubnetIds:
    Value: !Join 
      - ','
      - - !Ref PublicSubnet01
        - !Ref PublicSubnet02
    Export:
      Name: !Sub ${AWS::StackName}::PublicSubnetIds

  PrivateSubnetIds:
    Value: !Join 
      - ','
      - - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02
    Export:
      Name: !Sub ${AWS::StackName}::PrivateSubnetIds
